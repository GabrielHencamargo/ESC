$date
	Sat Sep 28 12:59:26 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module CPU_tb $end
$var wire 1 ! writeM $end
$var wire 15 " pc [14:0] $end
$var wire 16 # outM [15:0] $end
$var wire 15 $ addressM [14:0] $end
$var reg 1 % clk $end
$var reg 16 & inM [15:0] $end
$var reg 16 ' instruction [15:0] $end
$var reg 1 ( reset $end
$scope module cpu $end
$var wire 1 ) aluNeg $end
$var wire 1 * aluZero $end
$var wire 1 % clk $end
$var wire 16 + inM [15:0] $end
$var wire 16 , instruction [15:0] $end
$var wire 1 - isAInstruction $end
$var wire 1 ( reset $end
$var wire 1 . isCInstruction $end
$var wire 16 / aluOut [15:0] $end
$var reg 16 0 A [15:0] $end
$var reg 16 1 D [15:0] $end
$var reg 16 2 addressM [15:0] $end
$var reg 15 3 nextPC [14:0] $end
$var reg 16 4 outM [15:0] $end
$var reg 16 5 pc [15:0] $end
$var reg 1 ! writeM $end
$scope module alu $end
$var wire 16 6 X [15:0] $end
$var wire 16 7 Y [15:0] $end
$var wire 1 * carry_out $end
$var wire 1 8 f $end
$var wire 1 9 nX $end
$var wire 1 : nY $end
$var wire 1 ; no $end
$var wire 16 < out [15:0] $end
$var wire 1 = zX $end
$var wire 1 > zY $end
$var reg 16 ? X_reg [15:0] $end
$var reg 16 @ Y_reg [15:0] $end
$var reg 16 A out_reg [15:0] $end
$upscope $end
$scope module memory $end
$var wire 14 B address [13:0] $end
$var wire 1 % clk $end
$var wire 16 C data_in [15:0] $end
$var wire 16 D data_out [15:0] $end
$var wire 1 ! write_enable $end
$upscope $end
$upscope $end
$upscope $end
$scope module add16bits $end
$var wire 16 E a [15:0] $end
$var wire 16 F b [15:0] $end
$var wire 1 G carry_in $end
$var wire 16 H sum [15:0] $end
$var wire 16 I sum_temp [15:0] $end
$var wire 1 J carry_out $end
$var wire 16 K carry [15:0] $end
$scope module fa0 $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 G carry_in $end
$var wire 1 N carry_out $end
$var wire 1 O sum $end
$var wire 1 P s1 $end
$var wire 1 Q c2 $end
$var wire 1 R c1 $end
$scope module uut1 $end
$var wire 1 L a $end
$var wire 1 M b $end
$var wire 1 R carry $end
$var wire 1 P soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 P a $end
$var wire 1 G b $end
$var wire 1 Q carry $end
$var wire 1 O soma $end
$upscope $end
$upscope $end
$scope module fa1 $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 U carry_in $end
$var wire 1 V carry_out $end
$var wire 1 W sum $end
$var wire 1 X s1 $end
$var wire 1 Y c2 $end
$var wire 1 Z c1 $end
$scope module uut1 $end
$var wire 1 S a $end
$var wire 1 T b $end
$var wire 1 Z carry $end
$var wire 1 X soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 X a $end
$var wire 1 U b $end
$var wire 1 Y carry $end
$var wire 1 W soma $end
$upscope $end
$upscope $end
$scope module fa10 $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 ] carry_in $end
$var wire 1 ^ carry_out $end
$var wire 1 _ sum $end
$var wire 1 ` s1 $end
$var wire 1 a c2 $end
$var wire 1 b c1 $end
$scope module uut1 $end
$var wire 1 [ a $end
$var wire 1 \ b $end
$var wire 1 b carry $end
$var wire 1 ` soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 ` a $end
$var wire 1 ] b $end
$var wire 1 a carry $end
$var wire 1 _ soma $end
$upscope $end
$upscope $end
$scope module fa11 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 e carry_in $end
$var wire 1 f carry_out $end
$var wire 1 g sum $end
$var wire 1 h s1 $end
$var wire 1 i c2 $end
$var wire 1 j c1 $end
$scope module uut1 $end
$var wire 1 c a $end
$var wire 1 d b $end
$var wire 1 j carry $end
$var wire 1 h soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 h a $end
$var wire 1 e b $end
$var wire 1 i carry $end
$var wire 1 g soma $end
$upscope $end
$upscope $end
$scope module fa12 $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 m carry_in $end
$var wire 1 n carry_out $end
$var wire 1 o sum $end
$var wire 1 p s1 $end
$var wire 1 q c2 $end
$var wire 1 r c1 $end
$scope module uut1 $end
$var wire 1 k a $end
$var wire 1 l b $end
$var wire 1 r carry $end
$var wire 1 p soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 p a $end
$var wire 1 m b $end
$var wire 1 q carry $end
$var wire 1 o soma $end
$upscope $end
$upscope $end
$scope module fa13 $end
$var wire 1 s a $end
$var wire 1 t b $end
$var wire 1 u carry_in $end
$var wire 1 v carry_out $end
$var wire 1 w sum $end
$var wire 1 x s1 $end
$var wire 1 y c2 $end
$var wire 1 z c1 $end
$scope module uut1 $end
$var wire 1 s a $end
$var wire 1 t b $end
$var wire 1 z carry $end
$var wire 1 x soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 x a $end
$var wire 1 u b $end
$var wire 1 y carry $end
$var wire 1 w soma $end
$upscope $end
$upscope $end
$scope module fa14 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 } carry_in $end
$var wire 1 ~ carry_out $end
$var wire 1 !" sum $end
$var wire 1 "" s1 $end
$var wire 1 #" c2 $end
$var wire 1 $" c1 $end
$scope module uut1 $end
$var wire 1 { a $end
$var wire 1 | b $end
$var wire 1 $" carry $end
$var wire 1 "" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 "" a $end
$var wire 1 } b $end
$var wire 1 #" carry $end
$var wire 1 !" soma $end
$upscope $end
$upscope $end
$scope module fa15 $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 '" carry_in $end
$var wire 1 (" carry_out $end
$var wire 1 )" sum $end
$var wire 1 *" s1 $end
$var wire 1 +" c2 $end
$var wire 1 ," c1 $end
$scope module uut1 $end
$var wire 1 %" a $end
$var wire 1 &" b $end
$var wire 1 ," carry $end
$var wire 1 *" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 *" a $end
$var wire 1 '" b $end
$var wire 1 +" carry $end
$var wire 1 )" soma $end
$upscope $end
$upscope $end
$scope module fa2 $end
$var wire 1 -" a $end
$var wire 1 ." b $end
$var wire 1 /" carry_in $end
$var wire 1 0" carry_out $end
$var wire 1 1" sum $end
$var wire 1 2" s1 $end
$var wire 1 3" c2 $end
$var wire 1 4" c1 $end
$scope module uut1 $end
$var wire 1 -" a $end
$var wire 1 ." b $end
$var wire 1 4" carry $end
$var wire 1 2" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 2" a $end
$var wire 1 /" b $end
$var wire 1 3" carry $end
$var wire 1 1" soma $end
$upscope $end
$upscope $end
$scope module fa3 $end
$var wire 1 5" a $end
$var wire 1 6" b $end
$var wire 1 7" carry_in $end
$var wire 1 8" carry_out $end
$var wire 1 9" sum $end
$var wire 1 :" s1 $end
$var wire 1 ;" c2 $end
$var wire 1 <" c1 $end
$scope module uut1 $end
$var wire 1 5" a $end
$var wire 1 6" b $end
$var wire 1 <" carry $end
$var wire 1 :" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 :" a $end
$var wire 1 7" b $end
$var wire 1 ;" carry $end
$var wire 1 9" soma $end
$upscope $end
$upscope $end
$scope module fa4 $end
$var wire 1 =" a $end
$var wire 1 >" b $end
$var wire 1 ?" carry_in $end
$var wire 1 @" carry_out $end
$var wire 1 A" sum $end
$var wire 1 B" s1 $end
$var wire 1 C" c2 $end
$var wire 1 D" c1 $end
$scope module uut1 $end
$var wire 1 =" a $end
$var wire 1 >" b $end
$var wire 1 D" carry $end
$var wire 1 B" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 B" a $end
$var wire 1 ?" b $end
$var wire 1 C" carry $end
$var wire 1 A" soma $end
$upscope $end
$upscope $end
$scope module fa5 $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 G" carry_in $end
$var wire 1 H" carry_out $end
$var wire 1 I" sum $end
$var wire 1 J" s1 $end
$var wire 1 K" c2 $end
$var wire 1 L" c1 $end
$scope module uut1 $end
$var wire 1 E" a $end
$var wire 1 F" b $end
$var wire 1 L" carry $end
$var wire 1 J" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 J" a $end
$var wire 1 G" b $end
$var wire 1 K" carry $end
$var wire 1 I" soma $end
$upscope $end
$upscope $end
$scope module fa6 $end
$var wire 1 M" a $end
$var wire 1 N" b $end
$var wire 1 O" carry_in $end
$var wire 1 P" carry_out $end
$var wire 1 Q" sum $end
$var wire 1 R" s1 $end
$var wire 1 S" c2 $end
$var wire 1 T" c1 $end
$scope module uut1 $end
$var wire 1 M" a $end
$var wire 1 N" b $end
$var wire 1 T" carry $end
$var wire 1 R" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 R" a $end
$var wire 1 O" b $end
$var wire 1 S" carry $end
$var wire 1 Q" soma $end
$upscope $end
$upscope $end
$scope module fa7 $end
$var wire 1 U" a $end
$var wire 1 V" b $end
$var wire 1 W" carry_in $end
$var wire 1 X" carry_out $end
$var wire 1 Y" sum $end
$var wire 1 Z" s1 $end
$var wire 1 [" c2 $end
$var wire 1 \" c1 $end
$scope module uut1 $end
$var wire 1 U" a $end
$var wire 1 V" b $end
$var wire 1 \" carry $end
$var wire 1 Z" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 Z" a $end
$var wire 1 W" b $end
$var wire 1 [" carry $end
$var wire 1 Y" soma $end
$upscope $end
$upscope $end
$scope module fa8 $end
$var wire 1 ]" a $end
$var wire 1 ^" b $end
$var wire 1 _" carry_in $end
$var wire 1 `" carry_out $end
$var wire 1 a" sum $end
$var wire 1 b" s1 $end
$var wire 1 c" c2 $end
$var wire 1 d" c1 $end
$scope module uut1 $end
$var wire 1 ]" a $end
$var wire 1 ^" b $end
$var wire 1 d" carry $end
$var wire 1 b" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 b" a $end
$var wire 1 _" b $end
$var wire 1 c" carry $end
$var wire 1 a" soma $end
$upscope $end
$upscope $end
$scope module fa9 $end
$var wire 1 e" a $end
$var wire 1 f" b $end
$var wire 1 g" carry_in $end
$var wire 1 h" carry_out $end
$var wire 1 i" sum $end
$var wire 1 j" s1 $end
$var wire 1 k" c2 $end
$var wire 1 l" c1 $end
$scope module uut1 $end
$var wire 1 e" a $end
$var wire 1 f" b $end
$var wire 1 l" carry $end
$var wire 1 j" soma $end
$upscope $end
$scope module uut2 $end
$var wire 1 j" a $end
$var wire 1 g" b $end
$var wire 1 k" carry $end
$var wire 1 i" soma $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
xl"
xk"
xj"
xi"
xh"
xg"
zf"
ze"
xd"
xc"
xb"
xa"
x`"
x_"
z^"
z]"
x\"
x["
xZ"
xY"
xX"
xW"
zV"
zU"
xT"
xS"
xR"
xQ"
xP"
xO"
zN"
zM"
xL"
xK"
xJ"
xI"
xH"
xG"
zF"
zE"
xD"
xC"
xB"
xA"
x@"
x?"
z>"
z="
x<"
x;"
x:"
x9"
x8"
x7"
z6"
z5"
x4"
x3"
x2"
x1"
x0"
x/"
z."
z-"
x,"
x+"
x*"
x)"
x("
x'"
z&"
z%"
x$"
x#"
x""
x!"
x~
x}
z|
z{
xz
xy
xx
xw
xv
xu
zt
zs
xr
xq
xp
xo
xn
xm
zl
zk
xj
xi
xh
xg
xf
xe
zd
zc
xb
xa
x`
x_
x^
x]
z\
z[
xZ
xY
xX
xW
xV
xU
zT
zS
xR
xQ
xP
xO
xN
zM
zL
bx K
xJ
bx I
bx H
zG
bz F
bz E
bx D
bx C
b0 B
bx A
bx @
bx ?
x>
x=
bx <
x;
x:
x9
x8
bx 7
bx 6
b0 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
x.
x-
bx ,
bx +
z*
z)
1(
bx '
bx &
0%
bx $
bx #
b0 "
x!
$end
#5
1%
#10
1-
0.
0=
09
0>
0:
08
0;
0%
b1111 '
b1111 ,
0(
#15
bx B
b1111 7
bx "
b1111 0
b0xxxxxxxxxxxxxxx 5
1%
#20
0-
b1111 @
bx ?
1.
1=
19
0%
b1110110000010000 '
b1110110000010000 ,
#25
b1111 $
bx 7
b1111 2
0!
bx 0
1%
#30
1-
bx @
0.
0=
09
0%
b1 '
b1 ,
#35
b1 7
b1 0
1%
#40
0-
b1111111111111110 @
1.
1>
1:
0%
b1010101111001101 &
b1010101111001101 +
b1010101111001101 C
b1110001100001000 '
b1110001100001000 ,
#45
b1 $
b1 2
1!
1%
#50
1-
b1001000110100 7
b0 /
b0 <
b0 A
b0 @
0.
19
1;
0:
0%
b1001000110100 &
b1001000110100 +
b1001000110100 C
b101011001111000 '
b101011001111000 ,
#55
b101011001111000 0
1%
#60
b1010101111001101 7
09
0;
0%
b1010101111001101 &
b1010101111001101 +
b1010101111001101 C
b1001000110100 '
b1001000110100 ,
#65
b1001000110100 0
1%
#70
b1001000110100 7
b1010101111001101 @
0>
0%
b1 '
b1 ,
#75
b1 7
b1 0
1%
#80
0%
b1 '
b1 ,
#85
1%
#90
0%
#95
1%
#100
0%
#105
1%
#110
0%
#115
1%
#120
0%
#125
1%
#130
0%
#135
1%
#140
0%
